package org.dakside.booklibgui;

import java.util.List;
import javax.swing.JOptionPane;
import org.dakside.booklib.dao.BookDAO;
import org.dakside.booklib.dao.DAOFactory;
import org.dakside.booklib.dao.sqliteimpl.SQLiteDAOFactory;
import org.dakside.booklib.dto.Book;
import org.dakside.booklib.search.*;

/*
 * Copyright (C) 2016 Hoang Duc Chinh {@literal <dc.hoang.vn@gmail.com>}
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
/**
 *
 * @author Hoang Duc Chinh {@literal <dc.hoang.vn@gmail.com>}
 */
public class BookLibDemoGUI extends javax.swing.JFrame {

    private BookDAO bookDao;
    private WebSearch webSearch;
    private Book book;

    /**
     * Creates new form BookLibDemoGUI
     */
    public BookLibDemoGUI() {
        initComponents();
        initUtilities();
    }

    private void initUtilities() {
        DAOFactory instance = new SQLiteDAOFactory();
        bookDao = instance.createBookDAO();
        webSearch = new JsonWebApiSearch();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextISBN = new javax.swing.JTextField();
        jButtonScan = new javax.swing.JButton();
        jButtonType = new javax.swing.JButton();
        jButtonWebSearch = new javax.swing.JButton();
        jButtonDBSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextBookInfo = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jButtonAdd = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextDBTotal = new javax.swing.JTextField();
        jButtonUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Book library management");
        setResizable(false);

        jLabel1.setText("ISBN:");

        jTextISBN.setEditable(false);
        jTextISBN.setFocusable(false);
        jTextISBN.setHighlighter(null);

        jButtonScan.setText("Scan");
        jButtonScan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonScanActionPerformed(evt);
            }
        });

        jButtonType.setText("Type");
        jButtonType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTypeActionPerformed(evt);
            }
        });

        jButtonWebSearch.setText("Web Search");
        jButtonWebSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonWebSearchActionPerformed(evt);
            }
        });

        jButtonDBSearch.setText("DB Search");
        jButtonDBSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDBSearchActionPerformed(evt);
            }
        });

        jTextBookInfo.setEditable(false);
        jTextBookInfo.setColumns(20);
        jTextBookInfo.setRows(5);
        jTextBookInfo.setFocusable(false);
        jTextBookInfo.setHighlighter(null);
        jScrollPane1.setViewportView(jTextBookInfo);

        jLabel2.setText("Book information:");

        jButtonAdd.setText("Add");
        jButtonAdd.setMaximumSize(new java.awt.Dimension(65, 23));
        jButtonAdd.setMinimumSize(new java.awt.Dimension(65, 23));
        jButtonAdd.setPreferredSize(new java.awt.Dimension(65, 23));
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.setMaximumSize(new java.awt.Dimension(65, 23));
        jButtonDelete.setMinimumSize(new java.awt.Dimension(65, 23));
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jLabel3.setText("Total:");

        jTextDBTotal.setEditable(false);
        jTextDBTotal.setFocusable(false);
        jTextDBTotal.setHighlighter(null);
        jTextDBTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextDBTotalActionPerformed(evt);
            }
        });

        jButtonUpdate.setText("Update");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(1, 1, 1)
                        .addComponent(jTextDBTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButtonWebSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(70, 70, 70)
                                    .addComponent(jButtonDBSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jButtonScan, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButtonType, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jTextISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonScan)
                    .addComponent(jButtonType))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonWebSearch)
                    .addComponent(jButtonDBSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTextDBTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonUpdate))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonScanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonScanActionPerformed
        // TODO add your handling code here:
        QRScanner qrScanner = new QRScanner(this.jTextISBN);
        qrScanner.setVisible(true);        
    }//GEN-LAST:event_jButtonScanActionPerformed

    private void jButtonWebSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonWebSearchActionPerformed
        // TODO add your handling code here:
        WebSearch webSearch = new JsonWebApiSearch();
        String isbn = this.jTextISBN.getText();
        if ((isbn != null) && (!isbn.trim().isEmpty())) {
            Book book = webSearch.searchByISBN(isbn);
            if (book != null) {
                this.jTextBookInfo.setText(book.toString());
                this.book = book;
            } else {
                this.jTextBookInfo.setText("Cannot find the book with ISBN " + isbn + " from web!");
            }
        } else {
            this.jTextBookInfo.setText("Please provide the ISBN!");
        }

    }//GEN-LAST:event_jButtonWebSearchActionPerformed

    private void jButtonDBSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDBSearchActionPerformed
        // TODO add your handling code here:
        String isbn = this.jTextISBN.getText();
        if ((isbn != null) && (!isbn.trim().isEmpty())) {
            List<Book> bookList = this.bookDao.searchBookByISBN(isbn);
            if ((bookList != null) && (bookList.size() > 0)) {
                Book book = bookList.get(0);
                this.jTextBookInfo.setText(book.toString());
                this.book = book;
            } else {
                this.jTextBookInfo.setText("Cannot find the book with ISBN " + isbn + " in database!");
            }
        } else {
            this.jTextBookInfo.setText("Please provide the ISBN!");
        }
    }//GEN-LAST:event_jButtonDBSearchActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        // TODO add your handling code here:
        String isbn = this.jTextISBN.getText();
        if ((isbn != null) && (!isbn.trim().isEmpty())) {
            if (this.book!=null){
                List<Book> bookList = this.bookDao.searchBookByISBN(isbn);
                if ((bookList != null) && (bookList.size() > 0)) {
                    JOptionPane.showMessageDialog(null, "This book is already existed in database!");
                } else {
                    //this.book=bookList.get(0);
                    this.bookDao.insertBook(this.book);
                    this.jTextDBTotal.setText(String.valueOf(this.bookDao.getNumberOfBook()));
                    //this.jTextBookInfo.setText("Cannot find the book with ISBN " + isbn + " in database!");
                }
            }
        } else {
            this.jTextBookInfo.setText("Please provide the ISBN!");
        }
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        //this.jTextDBTotal.setText(String.valueOf(this.bookDao.getNumberOfBook()))
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jTextDBTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextDBTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextDBTotalActionPerformed

    private void jButtonTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTypeActionPerformed
        // TODO add your handling code here:
        IsbnInput isbnInput = new IsbnInput(this.jTextISBN);
        isbnInput.setVisible(true);
        //String tempIsbn = isbnInput.getIsbn();
        /*
         if ((tempIsbn != null) && (!tempIsbn.trim().isEmpty())) {
         this.jTextISBN.setText(tempIsbn);
         }*/
    }//GEN-LAST:event_jButtonTypeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookLibDemoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookLibDemoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookLibDemoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookLibDemoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BookLibDemoGUI bookLibGUI = new BookLibDemoGUI();
                bookLibGUI.setVisible(true);
                bookLibGUI.jTextDBTotal.setText(String.valueOf(bookLibGUI.bookDao.getNumberOfBook()));
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDBSearch;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonScan;
    private javax.swing.JButton jButtonType;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JButton jButtonWebSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextBookInfo;
    private javax.swing.JTextField jTextDBTotal;
    private javax.swing.JTextField jTextISBN;
    // End of variables declaration//GEN-END:variables
}
